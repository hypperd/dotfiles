;; profile variables
(defpoll profile_image :interval "10h" "echo \"$HOME/.face\"")
(defpoll profile_name :interval "10h" "whoami")

;; system info variables
(deflisten mic "scripts/system-info.sh mic")
(deflisten volume "scripts/volume.py")
(deflisten brightness "scripts/system-info.sh brightness")
(defpoll memory :interval "2s" "free | awk 'NR==2 {print $3 / $2 * 100}'")

;; player variables
(defvar poll_position true)
(defpoll music_position :run-while {poll_position} :interval "1s" 
    "scripts/system-info.sh music-position"
)
(deflisten player_json 
    :initial '{"title": "", "artist": "", "duration": "", "art": "", "status": ""}'
    "scripts/mediaplayer.py --player spotify"
)
;; system buttons
(defvar dunst_paused false)
(defvar idle_inhibitor false)
(defvar night_light true)
(defvar server false)

(defwidget startmenu[]
    (box :class "startmenu-window" :space-evenly true :orientation "h"
        (box :class "startmenu-box" :space-evenly false :orientation "v" :spacing 8
            (box :orientation "v" :class "startmenu-profile" :space-evenly false
                (box
                    :halign "center"
                    :space-evenly false
                    :class "profile-image"
                    :style "background-image: url('${profile_image}')"
                    :width 140
                    :height 140
                )
                (label
                    :class "profile-username"
                    :text profile_name
                )
            )
            (box :class "system-info" :orientation "v" :space-evenly false
                (box :spacing 8 :class "mic-bar" :orientation "h" :space-evenly false
                    (label :class "mic-icon" :text "mic")
                    (scale
                        :class "mic-slider"
                        :onchange "pactl set-source-volume @DEFAULT_SOURCE@ {}%"
                        :value {mic}
                        :hexpand true
                    ) 
                )
                (box :class "volume-bar" :orientation "h" :space-evenly false :spacing 8
                    (label :class "volume-icon" :text "volume_up")
                    (scale
                        :class "volume-slider"
                        :onchange "pactl set-sink-volume @DEFAULT_SINK@ {}%"
                        :round-digits 2
                        :value {volume}
                        :hexpand true
                    )
                )
                (box :class "brightness-bar" :orientation "h" :space-evenly false :spacing 8
                    (label :class "brightness-icon" :text "brightness_high")
                    (scale
                        :class "brightness-slider"
                        :onchange "brightnessctl -q set {}%"
                        :value {brightness}
                        :hexpand true
                    )   
                )
                (box :class "ram-bar" :orientation "h" :space-evenly false :spacing 8
                    (label :class "ram-icon" :text "memory")
                    (scale
                        :active false
                        :class "ram-slider"
                        :hexpand true
                        :value {memory}
                    )
                )
            )
            (box :class "music-player" :orientation "h" :space-evenly false :vexpand true
                (box
                    :space-evenly false
                    :class "song-art" 
                    :orientation "v" 
                    :hexpand true
                    :style "background-image: url('${player_json.art == "" ? 'assets/music_fallback.png' : '${player_json.art}'}')"
                    (box :class "music-info" :orientation "v" :space-evenly false :vexpand true
                        (label :class "now-playing" :halign "start" :text "Now Playing:")
                        (label 
                            :class "song-title" 
                            :halign "start"
                            :text {player_json.title == "" ? "Nothing" : player_json.title}
                            :limit-width 23
                        )
                        (label
                            :halign "start"
                            :class "song-artist"
                            :text {player_json.artist == "" ? "by Unknown Artist" : "by ${player_json.artist}"}
                            :limit-width 35
                        )
                        (label 
                            :class "song-position" 
                            :halign "start"
                            :valign "end"
                            :vexpand true
                            :text { player_json.duration == "" ? "--:-- / --:--" : "${music_position}/${player_json.duration}"}
                        )
                    )
                )
                (box :class "song-controls" :orientation "v" :space-evenly true
                    (button :onclick "playerctl previous --player spotify" "")
                    (button 
                        :class "play-pause"
                        :onclick "playerctl play-pause --player spotify"
                        {player_json.status == "playing" ? "" : ""}
                    )
                    (button :onclick "playerctl next --player spotify" "")
                )
            )
            (box :spacing 8 :class "system-btn" :orientation "h"
                (button
                    :onclick "scripts/dunst.sh"
                    :class {dunst_paused ? "system-btn-off" : "system-btn-on"}
                    {dunst_paused ? "notifications_off" : "notifications_active"}
                )
                (button
                    :class {server ? "system-btn-on" : "system-btn-off"}
                    :onclick "scripts/jellyfin.sh toggle &"
                    "storage"
                )
                (button
                    :onclick "scripts/night-light.sh"
                    :class {night_light ? "system-btn-on" : "system-btn-off"}
                    ""
                    ;; ｜ 
                )
                (button
                    :class {idle_inhibitor ? "system-btn-on" : "system-btn-off"}
                    :onclick "scripts/idle-inhibitor.sh toggle"
                    :tooltip "Idle Inhibitor"
                    {idle_inhibitor ? "flash_on" : "flash_off"}
                )
            )
        )
    )
)

(defwindow startmenu
	:geometry
		(geometry
			:x "6px"
            :y "6px"
			:width "370px" 
			:height "571px"
			:anchor "left bottom"
		)
	:stacking "fg"
	(startmenu)      
)